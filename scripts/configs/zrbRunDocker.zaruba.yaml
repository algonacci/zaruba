configs:

  zrbRunDocker:
      containerName: ''
      entryPoint: ''
      command: ''
      checkCommand: ''
      rebuild: false
      ports: ''
      volumes: ''
      user: ''
      network: '{{ if .GetValue "defaultNetwork" }}{{ .GetValue "defaultNetwork" }}{{ else }}zaruba{{ end }}'
      localhost: localhost
      hostDockerInternal: '{{ if .GetEnv "ZARUBA_HOST_DOCKER_INTERNAL" }}{{ .GetEnv "ZARUBA_HOST_DOCKER_INTERNAL" }}{{ else }}host.docker.internal{{ end }}'
      _setupContainerName: |
        {{ $d := .Decoration -}}
        CONTAINER_NAME="{{ .GetConfig "containerName" }}"
        if [ -z "${CONTAINER_NAME}" ]
        then
          echo "{{ $d.Bold }}{{ $d.Red }}containerName is not provided{{ $d.Normal }}"
          exit 1
        fi
      _setupImageName: |
        {{ $d := .Decoration -}}
        DOCKER_IMAGE_NAME="{{ .GetDockerImageName }}"
        if [ -z "${DOCKER_IMAGE_NAME}" ]
        then
          echo "{{ $d.Bold }}{{ $d.Red }}imageName is not provided{{ $d.Normal }}"
          exit 1
        fi
      _setup: |
        set -e
        {{ .Util.Str.Trim (.GetConfig "includeUtilScript") "\n" }} 
        {{ .Util.Str.Trim (.GetConfig "_setupContainerName") "\n" }} 
        {{ .Util.Str.Trim (.GetConfig "_setupImageName") "\n" }} 
      _startRebuildContainer: |
        stopContainer "${CONTAINER_NAME}"
        removeContainer "${CONTAINER_NAME}"
      _startLogContainer: |
        {{ $d := .Decoration -}}
        echo "üê≥ {{ $d.Bold }}{{ $d.Yellow }}Logging '${CONTAINER_NAME}'{{ $d.Normal }}"
        docker logs --since 0m --follow "${CONTAINER_NAME}"
      _startRunContainerEntryPoint: |
        {{ if .GetConfig "entryPoint" -}}
          --entrypoint "{{ .GetConfig "entryPoint" }}" {{ "" -}}
        {{ end -}}
      _startRunContainerEnv: |
        {{ $this := . -}}
        {{ if eq (.GetConfig "localhost") "localhost" -}}
          {{ range $key, $val := $this.GetEnvs -}}
            -e "{{ $key}}={{ $val }}" {{ "" -}}
          {{ end -}}
        {{ else -}}
          {{ range $key, $val := $this.GetEnvs -}}
            {{ $val = $this.ReplaceAll $val "localhost" ($this.GetConfig "localhost") -}}
            {{ $val = $this.ReplaceAll $val "127.0.0.1" ($this.GetConfig "localhost") -}}
            {{ $val = $this.ReplaceAll $val "0.0.0.0" ($this.GetConfig "localhost") -}}
            -e "{{ $key}}={{ $val }}" {{ "" -}}
          {{ end -}}
        {{ end -}}
      _startRunContainerPorts: |
        {{ $this := . -}}
        {{ range $index, $port := .Util.Str.Split (.Util.Str.Trim (.GetConfig "ports") "\n ") "\n" -}}
          {{ if ne $port "" -}}
            {{ $portParts := $this.Util.Str.Split ($this.Util.Str.Trim $port  " ") ":" -}}
            {{ if eq (len $portParts) 1 -}}
              -p {{ $port }}:{{ $port }} {{ "" -}}
            {{ else -}}
              {{ $hostPort := index $portParts 0 -}}
              {{ $containerPort := index $portParts 1 -}}
              -p {{ $hostPort }}:{{ $containerPort }} {{ "" -}}
            {{ end -}}
          {{ end -}}
        {{ end -}}
      _startRunContainerVolumes: |
        {{ $this := . -}}
        {{ range $index, $volume := .Util.Str.Split (.Util.Str.Trim (.GetConfig "volumes") "\n ") "\n" -}}
          {{ if ne $volume "" -}}
            {{ $volumeParts := $this.Util.Str.Split ($this.Util.Str.Trim $volume  " ") ":" -}}
            {{ if eq (len $volumeParts) 2 -}}
              {{ $absHostVolume := $this.GetWorkPath (index $volumeParts 0) -}}
              {{ $containerVolume := index $volumeParts 1 -}}
              -v "{{ $absHostVolume }}:{{ $containerVolume }}" {{ "" -}}
            {{ end -}}
          {{ end -}}
        {{ end -}}
      _startRunContainer: |
        {{ $d := .Decoration -}}
        {{ $imageTag := .GetConfig "imageTag" -}}
        {{ $this := . -}}
        docker run --name "${CONTAINER_NAME}" {{ "" -}}
        --hostname "${CONTAINER_NAME}" {{ "" -}}
        --network "{{ .GetConfig "network" }}" {{ "" -}}
        {{ if .GetConfig "user" }}--user "{{ .GetConfig "user" }}" {{ end }} {{ "" -}}
        {{ .GetConfig "_startRunContainerEntryPoint" -}}
        {{ .GetConfig "_startRunContainerEnv" -}}
        {{ .GetConfig "_startRunContainerPorts" -}}
        {{ .GetConfig "_startRunContainerVolumes" -}}
        {{ if ne (.GetConfig "hostDockerInternal") "host.docker.internal" }}--add-host "{{ .GetConfig "hostDockerInternal" }}:host.docker.internal"{{ end }} {{ "" -}}
        -d "${DOCKER_IMAGE_NAME}{{ if $imageTag }}:{{ $imageTag }}{{ end }}" {{ .GetConfig "command" }}
      _start: |
        {{ $d := .Decoration -}}
        {{ $rebuild := .GetConfig "rebuild" -}}
        {{ if .IsTrue $rebuild }}{{ .GetConfig "_startRebuildContainer" }}{{ end }}
        if [ "$(inspectDocker network ".Name" "{{ .GetConfig "network" }}")" = "{{ .GetConfig "network" }}" ]
        then
          echo "üê≥ {{ $d.Bold }}{{ $d.Yellow }}Network '{{ .GetConfig "network" }}' is already exist{{ $d.Normal }}"
        else
          echo "üê≥ {{ $d.Bold }}{{ $d.Yellow }}Creating network '{{ .GetConfig "network" }}'{{ $d.Normal }}"
          docker network create "{{ .GetConfig "network" }}"
        fi
        if [ "$(inspectDocker "container" ".State.Running" "${CONTAINER_NAME}")" = true ]
        then
          echo "üê≥ {{ $d.Bold }}{{ $d.Yellow }}Container '${CONTAINER_NAME}' is already started{{ $d.Normal }}"
          {{ .GetConfig "_startLogContainer" }}
        elif [ ! -z $(inspectDocker "container" ".Name" "${CONTAINER_NAME}") ]
        then
          echo "üê≥ {{ $d.Bold }}{{ $d.Yellow }}Retrieve previous log of '${CONTAINER_NAME}'{{ $d.Normal }}"
          sleep 1
          docker logs --tail 20 "${CONTAINER_NAME}"
          echo "üê≥ {{ $d.Bold }}{{ $d.Yellow }}Starting container '${CONTAINER_NAME}'{{ $d.Normal }}"
          docker start "${CONTAINER_NAME}"
          {{ .GetConfig "_startLogContainer" }}
        else
          echo "üê≥ {{ $d.Bold }}{{ $d.Yellow }}Creating and starting container '${CONTAINER_NAME}'{{ $d.Normal }}"
          {{ .GetConfig "_startRunContainer" }}
          {{ .GetConfig "_startLogContainer" }}
        fi
      start: ''