tasks:

  core.makeDockerTask:
    extend: core.runCoreScript
    private: true
    dependencies:
    - core.showAdv
    - core.isProject
    config:
      imageName: '{{ .GetValue "generatorDockerImageName" }}'
      containerName: '{{ .GetValue "generatorDockerContainerName" }}'
      serviceName: '{{ .GetValue "generatorServiceName" }}'
      templateLocation: '{{ .GetEnv "ZARUBA_HOME" }}/scripts/templates/task/docker/default.zaruba.yaml'
      serviceEnvs: '{{ .GetValue "generatorServiceEnvs" }}'
      dependencies: '{{ .GetValue "generatorTaskDependencies" }}'
      start: |
        {{- $d := .Decoration -}}
        TEMPLATE_LOCATION={{ .EscapeShellArg (.GetConfig "templateLocation") }}
        IMAGE_NAME={{ .EscapeShellArg (.GetConfig "imageName") }}
        CONTAINER_NAME={{ .EscapeShellArg (.GetConfig "containerName") }}
        SERVICE_NAME={{ .EscapeShellArg (.GetConfig "serviceName") }}
        SERVICE_ENVS={{ .EscapeShellArg (.GetConfig "serviceEnvs") }}
        DEPENDENCIES={{ .EscapeShellArg (.GetConfig "dependencies") }}
        create_docker_task "template_location=${TEMPLATE_LOCATION}" "image_name=${IMAGE_NAME}" "container_name=${CONTAINER_NAME}" "service_name=${SERVICE_NAME}" "envs=${SERVICE_ENVS}" "dependencies=${DEPENDENCIES}"
        echo ðŸŽ‰ðŸŽ‰ðŸŽ‰
        echo "{{ $d.Bold }}{{ $d.Yellow }}Docker task created{{ $d.Normal }}"

