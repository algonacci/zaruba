tasks:

  initSubrepos:
    icon: ðŸ“¦
    description: |
      Start a monorepo.
      You must specify `prefix`, and `url` of your subrepo in your `default.kwargs.yaml`:
      ```yaml
      subrepo::<name>::prefix: <directory>
      subrepo::<name>::url: <git-url>
      ```
    extend: core.runShellScript
    dependencies:
      - core.checkIsProject
    config:
      script: |
        {{ $names := .Kwargs.GetSubKeys "subrepo" -}}
        {{ $kwargs := .Kwargs -}}
        BRANCH={{ if .Kwargs.defaultBranch }}{{ .Kwargs.defaultBranch }}{{ else }}main{{ end }}
        ORIGINS=$(git remote)
        {{ range $index, $name := $names -}}
          {{ $prefix := $kwargs.GetValue "subrepo" $name "prefix" -}}
          {{ $url := $kwargs.GetValue "subrepo" $name "url" -}}
          NAME="{{ $name }}"
          PREFIX="{{ $prefix }}"
          URL="{{ $url }}"

          if [ -z "$URL" ]
          then
            echo "Subrepo ${NAME} doesn't have url" 1>&2
            exit 1
          fi
          if [ -z "$PREFIX" ]
          then
            echo "Subrepo ${NAME} doesn't have prefix" 1>&2
            exit 1
          fi

          if [ -z "$BRANCH" ]
          then
            BRANCH="master"
          fi

          ORIGIN_EXISTS=0
          for ORIGIN in $ORIGINS
          do
            if [ $ORIGIN = $NAME ]
            then
              ORIGIN_EXISTS=1
            fi
          done

          if [ $ORIGIN_EXISTS = 0 ]
          then
            echo $NAME origin is not exist
            git add . -A
            git commit -m 'Save works'

            PREFIX_EXISTS=0
            if [ -d "$PREFIX" ]
            then
              PREFIX_EXISTS=1
              mv "${PREFIX}" "${PREFIX}.bak"
              git add . -A
              git commit -m "Move ${PREFIX}"
            fi

            git remote add "${NAME}" "${URL}"
            git subtree add --prefix="${PREFIX}" "${NAME}" "${BRANCH}"
            git fetch "${NAME}" "${BRANCH}"
            git pull "${NAME}" "${BRANCH}"

            if [ $PREFIX_EXISTS = 1 ]
            then
              rm -Rf "${PREFIX}"
              mv "${PREFIX}.bak" "${PREFIX}"
              git add . -A
              git commit -m "Move ${PREFIX} back"
            fi
          fi
         {{ end -}}

  addSubrepo:
    icon: ðŸ¥‚
    description: |
      Add external repository to your project.
      You need to specify `name`, `prefix` and `url`. Example:
      ```sh
      zaruba please addSubRepo name=<subrepo-name> prefix=<directory> url=<git-url>
      ```
    extend: core.runShellScript
    dependencies:
      - core.checkIsProject
    config:
      script: |
        NAME="{{ .Kwargs.name }}"
        PREFIX="{{ .Kwargs.prefix }}"
        URL="{{ .Kwargs.url }}"
        if [ -z $NAME ]
        then
          echo "Subrepo name is not defined" 1>&2
          exit 1
        fi
        if [ -z $PREFIX ]
        then
          echo "Subrepo prefix is not defined" 1>&2
          exit 1
        fi
        if [ -z $URL ]
        then
          echo "Subrepo url is not defined" 1>&2
          exit 1
        fi
        echo "subrepo::${NAME}::prefix: ${PREFIX}" >> "default.kwargs.yaml"
        echo "subrepo::${NAME}::url: ${URL}" >> "default.kwargs.yaml"

  pushSubrepos:
    icon: ðŸ“¤
    description: Publish subtree of your subrepo
    extend: core.runShellScript
    dependencies:
      - initSubrepos
      - organize
      - core.checkIsProject
    config:
      script: |
        {{ $names := .Kwargs.GetSubKeys "subrepo" -}}
        {{ $kwargs := .Kwargs -}}
        BRANCH={{ if .Kwargs.defaultBranch }}{{ .Kwargs.defaultBranch }}{{ else }}main{{ end }}
        ORIGINS=$(git remote)
        {{ range $index, $name := $names -}}
          {{ $prefix := $kwargs.GetValue "subrepo" $name "prefix" -}}
          {{ $url := $kwargs.GetValue "subrepo" $name "url" -}}

          NAME="{{ $name }}"
          PREFIX="{{ $prefix }}"
          URL="{{ $url }}"

          ORIGIN_EXISTS=0
          for ORIGIN in $ORIGINS
          do
            if [ $ORIGIN = $NAME ]
            then
              ORIGIN_EXISTS=1
            fi
          done
          if [ $ORIGIN_EXISTS = 1 ]
          then
            git add . -A
            git commit -m 'Save works'
            git subtree push --prefix="${PREFIX}" "${NAME}" "${BRANCH}"
          fi
        {{ end -}}

  pullSubrepos:
    icon: ðŸ“¥
    description: Publish subtree of your subrepo
    extend: core.runShellScript
    dependencies:
      - initSubrepos
      - core.checkIsProject
    config:
      script: |
        {{ $names := .Kwargs.GetSubKeys "subrepo" -}}
        {{ $kwargs := .Kwargs -}}
        ORIGINS=$(git remote)
        BRANCH={{ if .Kwargs.defaultBranch }}{{ .Kwargs.defaultBranch }}{{ else }}main{{ end }}
        {{ range $index, $name := $names -}}
          {{ $prefix := $kwargs.GetValue "subrepo" $name "prefix" -}}
          {{ $url := $kwargs.GetValue "subrepo" $name "url" -}}

          NAME="{{ $name }}"
          PREFIX="{{ $prefix }}"
          URL="{{ $url }}"

          ORIGIN_EXISTS=0
          for ORIGIN in $ORIGINS
          do
            if [ $ORIGIN = $NAME ]
            then
              ORIGIN_EXISTS=1
            fi
          done
          if [ $ORIGIN_EXISTS = 1 ]
          then
            git add . -A
            git commit -m "Save works before pull"
            git subtree pull --prefix="${PREFIX}" "${NAME}" "${BRANCH}"
          fi
        {{ end -}}
 