inputs:
  
  zarubaServiceName.removeNodeModules:
    default: no
    options: [yes, no]
    prompt: Do you want to delete node_modules on zarubaServiceName?
    description: Delete node_modules on zarubaServiceName
 
  zarubaServiceName.npmCleanCache:
    default: no
    options: [yes, no]
    prompt: Do you want to clean npm cache on zarubaServiceName?
    description: Clean npm cache on zarubaServiceName

  zarubaServiceName.npmRebuild:
    default: no
    options: [yes, no]
    prompt: Do you want to perform npm rebuild on zarubaServiceName?
    description: npm rebuild on zarubaServiceName

tasks:
  
  prepareZarubaServiceName:
    icon: üê∏
    extend: core.prepareNodeJsApp
    location: zarubaServiceLocation
    inputs:
    - zarubaServiceName.removeNodeModules
    - zarubaServiceName.npmCleanCache
    - zarubaServiceName.npmRebuild
    timeout: 1h
    envRef: zarubaServiceName
    configRef: zarubaServiceName
    config:
      installTypeScript: false
      compileTypeScript: false
      removeNodeModules: '{{ .GetValue "zarubaServiceName.removeNodeModules" }}'
      npmCleanCache: '{{ .GetValue "zarubaServiceName.npmCleanCache" }}'
      npmRebuild: '{{ .GetValue "zarubaServiceName.npmRebuild" }}'
    lconfigRef: zarubaServiceName

  testZarubaServiceName:
    icon: üê∏
    extend: core.runNvmScript
    location: zarubaServiceLocation
    dependencies:
      - prepareZarubaServiceName
    timeout: 1h
    envRef: zarubaServiceName
    configRef: zarubaServiceName
    config:
      start: npm test
    lconfigRef: zarubaServiceName

  runZarubaServiceName:
    icon: üê∏
    extend: core.startNvmService
    location: zarubaServiceLocation
    dependencies:
      - prepareZarubaServiceName
    envRef: zarubaServiceName
    configRef: zarubaServiceName
    config:
      start: zarubaStartCommand
    lconfigRef: zarubaServiceName


configs:
  zarubaServiceName:
    nodeVersion: node
   
lconfigs:
  zarubaServiceName: {}

envs:
  zarubaServiceName: {}

