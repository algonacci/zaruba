inputs:

  zarubaServiceName.npmRebuild:
    default: no
    options: [yes, no]
    prompt: Do you want to perform npm rebuild on zarubaServiceName?
    description: npm rebuild on zarubaServiceName
  
  zarubaServiceName.removeNodeModules:
    default: no
    options: [yes, no]
    prompt: Do you want to delete node_modules on zarubaServiceName?
    description: Delete node_modules on zarubaServiceName

tasks:
  
  prepareZarubaServiceName:
    icon: üê∏
    extend: core.runCoreScript
    location: zarubaServiceLocation
    inputs:
    - zarubaServiceName.npmRebuild
    - zarubaServiceName.removeNodeModules
    timeout: 1h
    envRef: zarubaServiceName
    configRef: zarubaServiceName
    config:
      shouldTscCompile: true
      start: |
        {{ .GetConfig "includeNvmScript" }}
        {{ if .IsTrue (.GetValue "zarubaServiceName.removeNodeModules") }}rm -Rf node_modules{{ end }}
        npm install
        {{ if .IsTrue (.GetValue "zarubaServiceName.npmRebuild") }}npm rebuild{{ end }}
        {{ .GetConfig "tscCompileScript" }}
        npm start
    lconfigRef: zarubaServiceName

  testZarubaServiceName:
    icon: üê∏
    extend: core.runCoreScript
    location: zarubaServiceLocation
    dependencies:
      - prepareZarubaServiceName
    timeout: 1h
    envRef: zarubaServiceName
    configRef: zarubaServiceName
    config:
      start: |
        {{ .GetConfig "includeNvmScript" }}
        npm test
    lconfigRef: zarubaServiceName

  runZarubaServiceName:
    icon: üê∏
    extend: core.startService
    location: zarubaServiceLocation
    dependencies:
      - prepareZarubaServiceName
    envRef: zarubaServiceName
    configRef: zarubaServiceName
    config:
      start: |
        {{ .GetConfig "includeNvmScript" }}
        npm start
    lconfigRef: zarubaServiceName


configs:
  zarubaServiceName:
    nodeVersion: node
   
lconfigs:
  zarubaServiceName: {}

envs:
  zarubaServiceName: {}

