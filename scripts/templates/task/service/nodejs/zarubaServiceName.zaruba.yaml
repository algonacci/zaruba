includes:
- ./zarubaServiceName.config.zaruba.yaml
- ./zarubaServiceName.env.zaruba.yaml

inputs:

  zarubaServiceNameRunInLocal:
    default: yes
    options:
    - yes
    - no
    allowCustom: false
    description: Whether to run zarubaServiceName in local computer
    prompt: Run zarubaServiceName in local computer?
  
  zarubaServiceName.removeNodeModules:
    default: no
    options: [yes, no]
    prompt: Do you want to delete node_modules on zarubaServiceName?
    description: Delete node_modules on zarubaServiceName
 
  zarubaServiceName.npmCleanCache:
    default: no
    options: [yes, no]
    prompt: Do you want to clean npm cache on zarubaServiceName?
    description: Clean npm cache on zarubaServiceName

  zarubaServiceName.npmRebuild:
    default: no
    options: [yes, no]
    prompt: Do you want to perform npm rebuild on zarubaServiceName?
    description: npm rebuild on zarubaServiceName

tasks:
  
  prepareZarubaServiceName:
    icon: üê∏
    extend: core.prepareNodeJsApp
    location: zarubaServiceLocation
    inputs:
    - zarubaServiceName.removeNodeModules
    - zarubaServiceName.npmCleanCache
    - zarubaServiceName.npmRebuild
    timeout: 1h
    envRef: zarubaServiceName
    configRef: zarubaServiceName
    config:
      installTypeScript: false
      compileTypeScript: false
      removeNodeModules: '{{ .GetValue "zarubaServiceName.removeNodeModules" }}'
      npmCleanCache: '{{ .GetValue "zarubaServiceName.npmCleanCache" }}'
      npmRebuild: '{{ .GetValue "zarubaServiceName.npmRebuild" }}'

  testZarubaServiceName:
    icon: üê∏
    extend: core.runNvmScript
    location: zarubaServiceLocation
    dependencies:
      - prepareZarubaServiceName
    timeout: 1h
    envRef: zarubaServiceName
    configRef: zarubaServiceName
    config:
      start: npm test

  runZarubaServiceName:
    icon: üê∏
    extend: core.startNvmService
    location: zarubaServiceLocation
    dependencies:
      - prepareZarubaServiceName
    inputs:
    - zarubaServiceNameRunInLocal
    envRef: zarubaServiceName
    configRef: zarubaServiceName
    config:
      start: zarubaStartCommand

  runZarubaServiceNameContainer:
    extend: core.startService
    location: zarubaServiceLocation
    inputs:
    - zarubaServiceNameRunInLocal
    config:
      start: zarubaStartCommand
    configRefs:
    - zarubaServiceName
    - zarubaServiceNameContainer
    envRef: zarubaServiceName

  buildZarubaServiceNameImage:
    extend: core.buildDockerImage
    location: zarubaServiceLocation
    timeout: 1h
    configRef: zarubaServiceNameContainer
  
  pushZarubaServiceNameImage:
    extend: core.pushDockerImage
    location: zarubaServiceLocation
    timeout: 1h
    configRef: zarubaServiceNameContainer

  stopZarubaServiceNameContainer:
    extend: core.stopDockerContainer
    configRef: zarubaServiceNameContainer

  removeZarubaServiceNameContainer:
    extend: core.stopDockerContainer
    configRef: zarubaServiceNameContainer