includes:
  - ./core.action.project.zaruba.yaml
  - ./core.action.monorepo.zaruba.yaml
  - ./core.action.runscript.zaruba.yaml

tasks:

  showVersion:
    icon: 🕵️‍♂️
    description: Show zaruba version
    extend: core.runShellScript
    config:
      script: |
        {{ $d := .Decoration -}}
        echo "{{ $d.Bold }}{{ $d.Yellow }}Current version: $(git for-each-ref --sort=-taggerdate --count=1 --format '%(tag)' refs/tags) - $(git rev-parse --verify HEAD){{ $d.Normal }}"

  update:
    icon: 🔄
    description: Update zaruba
    extend: core.runShellScript
    config: 
      script: |
        {{ $d := .Decoration -}}
        cd ${ZARUBA_HOME}
        echo "📥 {{ $d.Bold }}{{ $d.Yellow }}Pull zaruba{{ $d.Normal }}"
        git pull origin master
        git fetch origin --tags
        echo "🚧 {{ $d.Bold }}{{ $d.Yellow }}Compile zaruba{{ $d.Normal }}"
        go build
        echo 🎉🎉🎉
        echo "{{ $d.Bold }}{{ $d.Yellow }}Zaruba ready !!!{{ $d.Normal }}"
        echo "{{ $d.Bold }}{{ $d.Yellow }}Current version: $(git for-each-ref --sort=-taggerdate --count=1 --format '%(tag)' refs/tags) - $(git rev-parse --verify HEAD){{ $d.Normal }}"
  
  core.setupPythonUtil:
    private: true
    extend: core.runShellScript
    config:
      script: |
        cd "${ZARUBA_HOME}/scripts/util/python"
        pipenv install
  
  setupUbuntu:
    icon: 💻
    description: |
      Setup your ubuntu machine (or Ubuntu WSL).
      This command will install:
      * pipenv
      * nvm
      * netcat
      * and some other utilities
      into your machine.
      USAGE: sudo -E zaruba please setupUbuntu.
      LIMITATION: Your home directory should be match to your user name.
    extend: core.runShellScript
    config:
      script: |
        set -e
        {{ $d := .Decoration -}}
        if echo "${HOME}" | grep -q "/root$" 
        then
          echo '⚠️ {{ $d.Red }}Your ${HOME} is seems to be root home directory:{{ $d.Normal }}'
          echo "⚠️ {{ $d.Red }}${HOME}{{ $d.Normal }}"
          echo 'You might want to re-run this command with {{ $d.Yellow }}`sudo -E`{{ $d.Normal }} option instead'
          echo "{{ $d.Bold }}{{ $d.Yellow }}Do you really want to continue with current home directory? (Y/n){{ $d.Normal }}"
          read INPUT
          if [ "${INPUT}" != "Y" ] && [ "${INPUT}" != "y" ]
          then
            echo "👏 Wise choice. Setup canceled"
            exit 0
          fi
        fi
        echo "📡 {{ $d.Bold }}{{ $d.Yellow }}Update repository{{ $d.Normal }}"
        apt-get update
        apt-get upgrade -y
        echo "📥 {{ $d.Bold }}{{ $d.Yellow }}Install packages{{ $d.Normal }}"
        apt-get install -y ncat make wget curl git golang python3 python3-pip python-is-python3 nodejs npm
        if [ -z "$(docker -v)" ]
        then
          echo "🐳 {{ $d.Bold }}{{ $d.Yellow }}Install docker{{ $d.Normal }}"
          apt-get install docker.io
        else
          echo "👏 {{ $d.Bold }}{{ $d.Yellow }}Docker was already installed{{ $d.Normal }}"
        fi
        echo "🐍 {{ $d.Bold }}{{ $d.Yellow }}Install pipenv{{ $d.Normal }}"
        pip3 install pipenv
        CURRENT_USER=$(pipenv run python "${PYTHON_UTIL}/get_segment.py" "${HOME}" / -1)
        if [ -d "${HOME}/.nvm" ]
        then
          echo "👏 {{ $d.Bold }}{{ $d.Yellow }}NVM was already installed{{ $d.Normal }}"
        else
          echo "🐸 {{ $d.Bold }}{{ $d.Yellow }}Install NVM{{ $d.Normal }}"
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh | bash
          NVM_DIR="$HOME/.nvm"
          \. "$NVM_DIR/nvm.sh"
          nvm install node
          chown "${CURRENT_USER}" "$NVM_DIR"
        fi
        echo "🐸 {{ $d.Bold }}{{ $d.Yellow }}Install Node packages{{ $d.Normal }}"
        npm install -g typescript node-gyp
        echo 🎉🎉🎉
        echo "{{ $d.Bold }}{{ $d.Yellow }}Complete !!!{{ $d.Normal }}"
        echo "TIPS: If you are using WSL, please enable WSL2 Backend for best experience"
        echo "https://docs.docker.com/docker-for-windows/wsl/"
