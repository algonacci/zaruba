tasks:
  
  setupSpark:
    icon: üî®
    description: Install spark and hadoop.
    extend: core.runCoreScript
    timeout: 1h
    inputs:
    - setupHomeDir
    - setupSparkDownloadUrl
    - setupSparkVersion
    - setupHadoopVersion
    config:
      beforeStart: |
        {{ $d := .Decoration -}}
        echo "This command will install spark and hadoop in your home directory. Root privilege is not required"
        echo "If this command doesn't run successfully, please open an issue on https://github.com/state-alcemists/zaruba."
        echo "Please also specify your OS version."
      start: |
        {{ $d := .Decoration -}}
        {{ if .GetValue "setupHomeDir" }}HOME="{{ .GetValue "setupHomeDir" }}"{{ end }}
        if [ "$(is_command_exist spark-shell --version)" = 1 ]
        then
          echo "üëè {{ $d.Bold }}{{ $d.Yellow }}Spark was already installed{{ $d.Normal }}"
        else
          rm -Rf "${HOME}/.spark"
          echo "‚òï {{ $d.Bold }}{{ $d.Yellow }}Install spark and hadoop{{ $d.Normal }}"
          wget -O spark.tgz "{{ .GetValue "setupSparkDownloadUrl" }}"
          mkdir -p "${HOME}/.spark"
          tar -xvzf spark.tgz -C "${HOME}/.spark"
          TEMPLATE_CONTENT='{{ .ParseFile (.GetRelativePath "./templates/shell/spark.sh") }}'
          append_if_exist "${TEMPLATE_CONTENT}" "${BOOTSTRAP_SCRIPT}"
          . "${BOOTSTRAP_SCRIPT}"
          rm spark.tgz
        fi
        echo üéâüéâüéâ
        echo "{{ $d.Bold }}{{ $d.Yellow }}Complete !!!{{ $d.Normal }}"
 