tasks:

  setupNvm:
    icon: 🔨
    description: Install NVM and Node.Js (Including node-gyp and typescript)
    extend: core.runCoreScript
    timeout: 1h
    inputs:
      - setupHomeDir
      - setupNodeVersion
    config:
      beforeStart: |
        {{ $d := .Decoration -}}
        echo "This command will install nvm, typescript, and node-gyp in your home directory. Root privilege is not required"
        echo "If this command doesn't run successfully, please open an issue on https://github.com/state-alcemists/zaruba."
        echo "Please also specify your OS version."
      start: |
        {{ $d := .Decoration -}}
        {{ if .GetValue "setupHomeDir" }}HOME="{{ .GetValue "setupHomeDir" }}"{{ end }}
        if [ "$(is_command_exist nvm --version)" = 1 ]
        then
          echo "👏 {{ $d.Bold }}{{ $d.Yellow }}NVM was already installed{{ $d.Normal }}"
        else
          rm -Rf "${HOME}/.nvm"
          echo "🐸 {{ $d.Bold }}{{ $d.Yellow }}Install NVM{{ $d.Normal }}"
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | sh
          TEMPLATE_CONTENT="$(cat "${ZARUBA_HOME}/scripts/templates/shell/nvm.sh")"
          echo "" >> "${BOOTSTRAP_SCRIPT}"
          echo "${TEMPLATE_CONTENT}" >> "${BOOTSTRAP_SCRIPT}"
          . "${BOOTSTRAP_SCRIPT}"
          nvm install "{{ .GetValue "setupNodeVersion" }}"
          . "${BOOTSTRAP_SCRIPT}"
        fi
        if [ "$(is_command_exist node-gyp --version)" = 1 ]
        then
          echo "👏 {{ $d.Bold }}{{ $d.Yellow }}Node-gyp was already installed{{ $d.Normal }}"
        else 
          echo "🐸 {{ $d.Bold }}{{ $d.Yellow }}Install node-gyp{{ $d.Normal }}"
          npm install -g node-gyp
        fi
        if [ "$(is_command_exist tsc --version)" = 1 ]
        then
          echo "👏 {{ $d.Bold }}{{ $d.Yellow }}Typescript was already installed{{ $d.Normal }}"
        else
          echo "🐸 {{ $d.Bold }}{{ $d.Yellow }}Install typescript{{ $d.Normal }}"
          npm install -g typescript
        fi
        echo 🎉🎉🎉
        echo "{{ $d.Bold }}{{ $d.Yellow }}Complete !!!{{ $d.Normal }}"
       

