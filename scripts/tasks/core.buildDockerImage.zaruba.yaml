tasks:

  core.buildDockerImage:
    icon: üê≥
    private: true
    description: |
      Build docker image.
      Common config:
        imageName : Image name
    extend: core.runCoreScript
    dependencies:
      - updateProjectLinks
    configRef: coreDocker
    config:
      imagePrefixTrailingSlash: true
      buildArg: ""
      start.buildDockerImage.buildArg: |
        {{ range $index, $buildArg := .Split (.Trim (.GetConfig "buildArg") "\n" ) "\n" -}}
          {{ if ne $buildArg "" -}}
            --build-arg {{ $buildArg }} {{ "" -}}
          {{ end -}}
        {{ end -}}
      start: |
        set -e
        {{ $d := .Decoration -}}
        DOCKER_IMAGE_PREFIX="{{ .GetDockerImagePrefix }}"
        if [ ! -f "$(pwd)/Dockerfile" ]
        then
          echo "{{ $d.Bold }}{{ $d.Red }}'Dockerfile' should be exist{{ $d.Normal }}"
          exit 1
        fi
        DOCKER_IMAGE_NAME="{{ if .GetConfig "imageName" }}{{ .GetConfig "imageName" }}{{ else }}$("{{ .ZarubaBin }}" getServiceName "$(pwd)"){{ end }}"
        DOCKER_IMAGE_TAG="{{ .GetConfig "imageTag" }}"
        if [ ! -z "${DOCKER_IMAGE_TAG}" ]
        then
          docker build {{ .GetConfig "start.buildDockerImage.buildArg" }} -t "${DOCKER_IMAGE_PREFIX}${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}" -t "${DOCKER_IMAGE_PREFIX}${DOCKER_IMAGE_NAME}:latest" .
        else
          docker build {{ .GetConfig "start.buildDockerImage.buildArg" }} -t "${DOCKER_IMAGE_PREFIX}${DOCKER_IMAGE_NAME}:latest" .
        fi
        echo üéâüéâüéâ
        echo "{{ $d.Bold }}{{ $d.Yellow }}Docker image built{{ $d.Normal }}"

