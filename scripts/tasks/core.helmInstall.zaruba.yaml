tasks:
  core.helmInstall:
    extend: core.runCoreScript
    private: true
    dependencies:
    - core.helmRepoUpdate
    config:
      chart: ''
      valueFile: ''
      valueTemplateFile: ''
      releaseName: ''
      kubeContext: '{{ .GetValue "kubeContext" }}'
      start: |
        if [ "$(kubectl config current-context)" != "{{ .GetConfig "kubeContext" }}" ]
        then
          kubectl config set-context "{{ .GetConfig "kubeContext" }}"
        fi
        {{ $fileContent := .ParseFile (.GetConfig "valueTemplateFile") }}
        mkdir -p "$(dirname "{{ .GetConfig "valueFile" }}")"
        {{ $err := .WriteFile (.GetConfig "valueFile") $fileContent -}}
        if [ "$(is_command_error helm status "{{ .GetConfig "releaseName" }}")" ]
        then
          helm install "{{ .GetConfig "releaseName" }}" "{{ .GetConfig "chart" }}" -f "{{ .GetConfig "valueFile" }}"
        else
          helm upgrade "{{ .GetConfig "releaseName" }}" "{{ .GetConfig "chart" }}" -f "{{ .GetConfig "valueFile" }}"
        fi
