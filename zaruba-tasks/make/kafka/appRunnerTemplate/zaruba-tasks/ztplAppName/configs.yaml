configs:

  ztplAppNameKafka:
    runInLocal: '{{ .GetValue "runZtplAppNameInLocal" }}'
    ports: |
      ztplAppYamlKafkaPorts

  ztplAppNameKafkaContainer:
    useImagePrefix: true
    imageName: ztpl-app-image-name-kafka
    containerName: ztplAppContainerName
    localhost: host.docker.internal

  ztplAppNameSchemaRegistry:
    runInLocal: '{{ .GetValue "runZtplAppNameInLocal" }}'
    ports: |
      ztplAppYamlSchemaRegistryPorts

  ztplAppNameSchemaRegistryContainer:
    useImagePrefix: true
    imageName: ztpl-app-image-name-kafka-schema-registry
    containerName: ztplAppContainerNameSchemaRegistry
    localhost: host.docker.internal


  ztplAppNameConnect:
    runInLocal: '{{ .GetValue "runZtplAppNameInLocal" }}'
    ports: |
      ztplAppYamlConnectPorts

  ztplAppNameConnectContainer:
    useImagePrefix: true
    imageName: ztpl-app-image-name-kafka-connect
    containerName: ztplAppContainerNameConnect
    localhost: host.docker.internal

  ztplAppNameZookeeper:
    runInLocal: '{{ .GetValue "runZtplAppNameInLocal" }}'

  ztplAppNameZookeeperContainer:
    useImagePrefix: true
    imageName: ztpl-app-image-name-zookeeper
    containerName: ztplAppContainerNameZookeeper
    localhost: host.docker.internal
    ports: |
      ztplAppYamlZookeeperPorts


  ztplAppNameAkhq:
    runInLocal: '{{ .GetValue "runZtplAppNameInLocal" }}'

  ztplAppNameAkhqContainer:
    useImagePrefix: true
    imageName: ztpl-app-image-name-akhq
    containerName: ztplAppContainerNameAkhq
    localhost: host.docker.internal
    ports: |
      ztplAppYamlAkhqPorts