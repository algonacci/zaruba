tasks:

  zrbMake:
    extend: zrbRunCoreScript
    dependencies:
      - zrbShowAdv
    private: true
    config:
      templateLocations: '{{ .GetValue "templateLocations" }}'
      appBuildImageCommand: '{{ .GetValue "appBuildImageCommand" }}'
      appContainerName: '{{ .GetValue "appContainerName" }}'
      appDependencies: '{{ .GetValue "appDependencies" }}'
      appDirectory: '{{ .GetValue "appDirectory" }}'
      appEnvPrefix: '{{ .GetValue "appEnvPrefix" }}'
      appEnvs: '{{ .GetValue "appEnvs" }}'
      appHelmChartUrl: '{{ .GetValue "appHelmChartUrl" }}'
      appImageName: '{{ .GetValue "appImageName" }}'
      appName: '{{ .GetValue "appName" }}'
      appPorts: '{{ .GetValue "appPorts" }}'
      defaultAppPorts: '[]'
      appContainerVolumes: '{{ .GetValue "appContainerVolumes" }}'
      defaultAppContainerVolumes: '[]'
      appPrepareCommand: '{{ .GetValue "appPrepareCommand" }}'
      appPushImageCommand: '{{ .GetValue "appPushImageCommand" }}'
      appRunnerVersion: '{{ .GetValue "appRunnerVersion" }}'
      appStartCommand: '{{ .GetValue "appStartCommand" }}'
      appStartContainerCommand: '{{ .GetValue "appStartContainerCommand" }}'
      appCheckCommand: '{{ .GetValue "appCheckCommand" }}'
      appTestCommand: '{{ .GetValue "appTestCommand" }}'
      appCrudEntity: '{{ .GetValue "appCrudEntity" }}'
      appCrudFields: '{{ .GetValue "appCrudFields" }}'
      appEventName: '{{ .GetValue "appEventName" }}'
      appHttpMethod: '{{ .GetValue "appHttpMethod" }}'
      appModuleName: '{{ .GetValue "appModuleName" }}'
      appRpcName: '{{ .GetValue "appRpcName" }}'
      appUrl: '{{ .GetValue "appUrl" }}'
      _prepareReplacementMap: |
        . "${ZARUBA_HOME}/zaruba-tasks/make/_base/bash/setReplacementMap.sh"
      _prepareVariables: |
        . "${ZARUBA_HOME}/zaruba-tasks/make/_base/bash/prepareVariables.sh"
      _prepareStartCommand: |
        . "${ZARUBA_HOME}/zaruba-tasks/make/_base/bash/prepareStartCommand.sh"
      _preparePrepareCommand: |
        . "${ZARUBA_HOME}/zaruba-tasks/make/_base/bash/preparePrepareCommand.sh"
      _prepareTestCommand: |
        . "${ZARUBA_HOME}/zaruba-tasks/make/_base/bash/prepareTestCommand.sh"
      _prepareCheckCommand: |
        . "${ZARUBA_HOME}/zaruba-tasks/make/_base/bash/prepareCheckCommand.sh"
      _prepare: |
        {{ .GetConfig "_prepareVariables" }}
        {{ .GetConfig "_prepareStartCommand" }}
        {{ .GetConfig "_preparePrepareCommand" }}
        {{ .GetConfig "_prepareTestCommand" }}
        {{ .GetConfig "_prepareCheckCommand" }}
        {{ .GetConfig "_afterPrepareVariables" }}
        {{ .GetConfig "_prepareReplacementMap" }}
      _afterPrepareVariables: ''
      _integrate: ''
      _validateTemplateLocation: |
        {{ $d := .Decoration -}}
        if [ "$("${ZARUBA_HOME}/zaruba" list validate "${_ZRB_TEMPLATE_LOCATIONS}")" = 0 ]
        then
          echo "{{ $d.Bold }}{{ $d.Red }}Invalid _ZRB_TEMPLATE_LOCATIONS: ${_ZRB_TEMPLATE_LOCATIONS}{{ $d.Normal }}"
          exit 1
        fi
      _validateAppContainerVolumes: |
        {{ $d := .Decoration -}}
        if [ "$("${ZARUBA_HOME}/zaruba" list validate "${_ZRB_APP_CONTAINER_VOLUMES}")" = 0 ]
        then
          echo "{{ $d.Bold }}{{ $d.Red }}Invalid _ZRB_APP_CONTAINER_VOLUMES: ${_ZRB_APP_CONTAINER_VOLUMES}{{ $d.Normal }}"
          exit 1
        fi
      _validateAppPorts: |
        {{ $d := .Decoration -}}
        if [ "$("${ZARUBA_HOME}/zaruba" list validate "${_ZRB_APP_PORTS}")" = 0 ]
        then
          echo "{{ $d.Bold }}{{ $d.Red }}Invalid _ZRB_APP_PORTS: ${_ZRB_APP_PORTS}{{ $d.Normal }}"
          exit 1
        fi
      _setDefaultAppContainerVolumes: |
        if [ "$("${ZARUBA_HOME}/zaruba" list length "${_ZRB_APP_CONTAINER_VOLUMES}")" = 0 ]
        then
          _ZRB_APP_CONTAINER_VOLUMES='{{ .GetConfig "defaultAppContainerVolumes" }}'
        fi
      _setDefaultAppPorts: |
        if [ "$("${ZARUBA_HOME}/zaruba" list length "${_ZRB_APP_PORTS}")" = 0 ]
        then
          _ZRB_APP_PORTS='{{ .GetConfig "defaultAppPorts" }}'
        fi
      _start: |
        . "${ZARUBA_HOME}/zaruba-tasks/make/_base/bash/util.sh"
        _ZRB_PROJECT_FILE_NAME='./index.zaruba.yaml'
        _ZRB_TEMPLATE_LOCATIONS='{{ .GetConfig "templateLocations" }}'
        {{ .GetConfig "_validateTemplateLocation" }}
        _ZRB_APP_BUILD_IMAGE_COMMAND='{{ .GetConfig "appBuildImageCommand" }}'
        _ZRB_APP_CHECK_COMMAND='{{ .GetConfig "appCheckCommand" }}'
        _ZRB_APP_CONTAINER_NAME='{{ .GetConfig "appContainerName" }}'
        _ZRB_APP_CONTAINER_VOLUMES='{{ .GetConfig "appContainerVolumes" }}'
        {{ .GetConfig "_setDefaultAppContainerVolumes" }}
        {{ .GetConfig "_validateAppContainerVolumes" }}
        _ZRB_APP_DEPENDENCIES='{{ .GetConfig "appDependencies" }}'
        _ZRB_APP_DIRECTORY='{{ .GetConfig "appDirectory" }}'
        _ZRB_APP_ENV_PREFIX='{{ .GetConfig "appEnvPrefix" }}'
        _ZRB_APP_ENVS='{{ .GetConfig "appEnvs" }}'
        _ZRB_APP_HELM_CHART_URL='{{ .GetConfig "appHelmChartUrl" }}'
        _ZRB_APP_IMAGE_NAME='{{ .GetConfig "appImageName" }}'
        _ZRB_APP_NAME='{{ .GetConfig "appName" }}'
        _ZRB_APP_PORTS='{{ .GetConfig "appPorts" }}'
        {{ .GetConfig "_setDefaultAppPorts" }}
        {{ .GetConfig "_validateAppPorts" }}
        _ZRB_APP_PREPARE_COMMAND='{{ .GetConfig "appPrepareCommand" }}'
        _ZRB_APP_PUSH_IMAGE_COMMAND='{{ .GetConfig "appPushImageCommand" }}'
        _ZRB_APP_RUNNER_VERSION='{{ .GetConfig "appRunnerVersion" }}'
        _ZRB_APP_START_COMMAND='{{ .GetConfig "appStartCommand" }}'
        _ZRB_APP_START_CONTAINER_COMMAND='{{ .GetConfig "appStartContainerCommand" }}'
        _ZRB_APP_TEST_COMMAND='{{ .GetConfig "appTestCommand" }}'
        _ZRB_APP_CRUD_ENTITY='{{ .GetConfig "appCrudEntity" }}'
        _ZRB_APP_CRUD_FIELDS='{{ .GetConfig "appCrudFields" }}'
        _ZRB_APP_EVENT_NAME='{{ .GetConfig "appEventName" }}'
        _ZRB_APP_HTTP_METHOD='{{ .GetConfig "appHttpMethod" }}'
        _ZRB_APP_MODULE_NAME='{{ .GetConfig "appModuleName" }}'
        _ZRB_APP_RPC_NAME='{{ .GetConfig "appRpcName" }}'
        _ZRB_APP_URL='{{ .GetConfig "appUrl" }}'
        _ZRB_REPLACEMENT_MAP='{}'
        __ZRB_PWD=$(pwd)
        {{ .GetConfig "_prepare" }}
        echo "_ZRB_TEMPLATE_LOCATIONS: ${_ZRB_TEMPLATE_LOCATIONS}"
        echo "_ZRB_REPLACEMENT_MAP: ${_ZRB_REPLACEMENT_MAP}"
        cd "${__ZRB_PWD}"
        _generate "${_ZRB_TEMPLATE_LOCATIONS}" "${_ZRB_REPLACEMENT_MAP}"
        {{ .GetConfig "_integrate" }}
        cd "${__ZRB_PWD}"
      start: ''