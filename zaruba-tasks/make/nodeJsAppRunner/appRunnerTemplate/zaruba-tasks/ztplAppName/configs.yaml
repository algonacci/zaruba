configs:

  ztplAppName:
    nodeVersion: node
    runInLocal: '{{ .GetValue "runZtplAppNameInLocal" }}'
    ports: |
      ztplAppYamlPorts
    beforeStart: |
      NODE_VERSION='{{ .GetConfig "nodeVersion" }}'
      . "{{ .GetProjectPath "zaruba-tasks/ztplAppName/bash/useNvm.sh" }}"

  ztplAppNameContainer:
    useImagePrefix: true
    imageName: ztpl-app-image-name
    containerName: ztplAppContainerName
    localhost: host.docker.internal
    volumes: |
      ztplAppYamlContainerVolumes

  startZtplAppName:
    start: |
      ztplAppStartCommand
    check: |
      ztplAppCheckCommand

  testZtplAppName:
    start: |
      ztplAppTestCommand

  prepareZtplAppName:
    installTs: false
    compileTs: false
    tsVersion: ''
    removeNodeModules: '{{ .GetValue "removeZtplAppNameNodeModules" }}'
    cleanNpmCache: '{{ .GetValue "cleanZtplAppNameNpmCache" }}'
    rebuildNpm: '{{ .GetValue "rebuildZtplAppNameNpm" }}'
    start: |
      INSTALL_TS={{ if .IsTrue (.GetConfig "installTs ") }}1{{ else }}0{{ end }}
      COMPILE_TS={{ if .IsTrue (.GetConfig "compileTs") }}1{{ else }}0{{ end }}
      TS_VERSION="{{ if .GetConfig "tsVersion" }}@{{ .GetConfig "tsVersion"}}{{ else}}{{ end }}"
      REMOVE_NODE_MODULES={{ if .IsTrue (.GetConfig "removeNodeModules") }}1{{ else }}0{{ end }}
      CLEAN_NPM_CACHE={{ if .IsTrue (.GetConfig "cleanNpmCache") }}1{{ else }}0{{ end }}
      REBUILD_NPM={{ if .IsTrue (.GetConfig "rebuildNpm") }}1{{ else }}0{{ end }}
      . "{{ .GetProjectPath "zaruba-tasks/ztplAppName/bash/prepare.sh" }}"