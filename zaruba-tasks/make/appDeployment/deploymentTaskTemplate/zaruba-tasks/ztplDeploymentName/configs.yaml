configs:

  ztplDeploymentName:
    pulumiStack: '{{ if .GetValue "pulumiStack" }}{{ .GetValue "pulumiStack" }}{{ else }}dev{{ end }}'
    pulumiSelectStack: |
      PULUMI_STACK='{{ .GetConfig "pulumiStack" }}'
      pulumi stack select "${PULUMI_STACK}" || pulumi stack init "${PULUMI_STACK}"

  deployZtplDeploymentName:
    start: |
      {{ .GetConfig "pulumiSelectStack" }}
      pulumi up -y

  destroyZtplDeploymentName: 
    start: |
      {{ .GetConfig "pulumiSelectStack" }}
      pulumi destroy -y

  prepareZtplDeploymentName:
    useImagePrefix: true
    imagePrefix: '{{ .GetValue "defaultImagePrefix" }}'
    namespace: default
    imageName: ztpl-app-image-name
    imageTag: latest
    replicaCount: 1
    start: |
      {{ $d := .Decoration -}}
      if [ ! -d "./venv" ]
      then
        python -m venv ./venv
      fi
      source ./venv/bin/activate
      pip install -r requirements.txt
      DEPLOYMENT_CONFIG={}
      NAMESPACE='{{ .GetConfig "namespace" }}'
      IMAGE_NAME="{{ .GetDockerImageName }}"
      IMAGE_TAG="{{ if .GetConfig "imageTag" }}{{ .GetConfig "imageTag" }}{{ else }}latest{{ end }}"
      RAW_ENVS='{{ .ToJSON .GetEnvs }}'
      RAW_PORTS='{{ .GetConfig "ports" }}'
      REPLICA_COUNT='{{ .GetConfig "replicaCount" }}'
      . '{{ .GetProjectPath "zaruba-tasks/ztplDeploymentName/bash/util.sh" }}'
      . '{{ .GetProjectPath "zaruba-tasks/ztplDeploymentName/bash/prepareVariables.sh" }}'
      echo "{{ $d.Yellow }}ðŸš§ Deployment Config:{{ $d.Normal }} ${DEPLOYMENT_CONFIG}"
      echo "${DEPLOYMENT_CONFIG}" > '{{ .GetProjectPath "ztplDeploymentDirectory/config/config.json" }}'
    ports: |
      ztplAppYamlPorts