includes:
  - ./config.zaruba.yaml
  - ./env.zaruba.yaml
  - ./input.zaruba.yaml

tasks:
  
  prepareZarubaServiceName:
    icon: üê∏
    extend: core.prepareNodeJsApp
    location: zarubaServiceLocation
    inputs:
      - zarubaServiceName.removeNodeModules
      - zarubaServiceName.npmCleanCache
      - zarubaServiceName.npmRebuild
    timeout: 1h
    config:
      installTypeScript: false
      compileTypeScript: false
      removeNodeModules: '{{ .GetValue "zarubaServiceName.removeNodeModules" }}'
      npmCleanCache: '{{ .GetValue "zarubaServiceName.npmCleanCache" }}'
      npmRebuild: '{{ .GetValue "zarubaServiceName.npmRebuild" }}'
    configRef: zarubaServiceName
    envRef: zarubaServiceName

  testZarubaServiceName:
    icon: üê∏
    extend: core.runNvmScript
    location: zarubaServiceLocation
    dependencies:
        - prepareZarubaServiceName
    timeout: 1h
    config:
      start: npm test
    configRef: zarubaServiceName
    envRef: zarubaServiceName

  runZarubaServiceName:
    icon: üê∏
    extend: core.startNvmService
    location: zarubaServiceLocation
    dependencies:
        - prepareZarubaServiceName
    inputs:
      - zarubaServiceNameRunInLocal
    config:
      start: zarubaStartCommand
    configRef: zarubaServiceName
    envRef: zarubaServiceName

  runZarubaServiceNameContainer:
    extend: core.startDockerContainer
    location: zarubaServiceLocation
    inputs:
      - zarubaServiceNameRunInLocal
    configRefs:
      - zarubaServiceNameContainer
      - zarubaServiceName
    envRef: zarubaServiceName

  buildZarubaServiceNameImage:
    extend: core.buildDockerImage
    location: zarubaServiceLocation
    timeout: 1h
    configRef: zarubaServiceNameContainer

  pushZarubaServiceNameImage:
    extend: core.pushDockerImage
    location: zarubaServiceLocation
    timeout: 1h
    configRef: zarubaServiceNameContainer

  stopZarubaServiceNameContainer:
    extend: core.stopDockerContainer
    configRef: zarubaServiceNameContainer

  removeZarubaServiceNameContainer:
    extend: core.stopDockerContainer
    configRef: zarubaServiceNameContainer

  helmInstallZarubaServiceName:
    extend: core.helmInstall
    location: ../..
    dependencies:
      - helmGenerateValueZarubaServiceName
    timeout: 1h
    configRef: zarubaServiceNameHelm
    envRef: zarubaServiceName

  helmUninstallZarubaServiceName:
    extend: core.helmUninstall
    location: ../..
    timeout: 1h
    configRef: zarubaServiceNameHelm

  helmGenerateValueZarubaServiceName:
    extend: core.helmGenerateValue
    location: ../..
    configRefs:
      - zarubaServiceNameHelm
      - zarubaServiceNameContainer
      - zarubaServiceName
    envRef: zarubaServiceName 