tasks:

  createZarubaServiceNameDb:
    extend: zarubaPostgreServiceExecSql
    dependencies:
      - zarubaPostgreTask
    config:
      queries: 'CREATE DATABASE {{ .GetConfig "dbName" }}'
    configRef: createZarubaServiceNameDb
    envRef: createZarubaServiceNameDb

  createZarubaServiceNameConfiguratorScript:
    extend: core.runShellScript
    location: ../../zarubaServiceName
    config:
      start: |
        {{ $err := .WriteFile (.GetRelativePath "../../zarubaServiceName/configurator/init.sh") (.ParseFile (.GetRelativePath "../../zarubaServiceName/configurator/init.gotmpl.sh")) }}
    configRefs:
      - zarubaServiceNameConfigurator
      - zarubaServiceNameContainer
    envRefs:
      - zarubaServiceNameConfigurator
      - zarubaServiceName

  configureZarubaServiceName:
    extend: core.runDockerContainer
    location: ../../zarubaServiceName
    dependencies:
      - zarubaRedisTask
      - zarubaPostgreTask
      - createZarubaServiceNameDb
      - createZarubaServiceNameConfiguratorScript
      - buildZarubaServiceNameImage
    timeout: 1h
    inputs:
      - zarubaServiceNameRunInLocal
    configRefs:
      - zarubaServiceNameConfigurator
      - zarubaServiceNameContainer
    envRefs:
      - zarubaServiceNameConfigurator
      - zarubaServiceName

  configureZarubaServiceNameWorker:
    extend: core.runInDockerContainer
    location: ../../zarubaServiceName
    dependencies:
      - runZarubaServiceNameWorker
    config:
      containerShell: bash
      commands: |
        {{ .ParseFile "worker/init.gotmpl.sh"}}
    configRef: zarubaServiceNameWorker
    envRef: zarubaServiceNameWorker
  

