configs:

  createZarubaServiceNameDb:
    dbName: '{{ .GetEnv "DB_NAME" }}'

  zarubaServiceNameContainer:
    useImagePrefix: true
    imagePrefix: '{{ .GetValue "defaultImagePrefix" }}'
    imageName: zarubaImageName
    imageTag: '{{ .GetValue "defaultImageTag" }}'
    localhost: host.docker.internal
    volumes: |
      {{ .GetRelativePath "../../zarubaServiceName/dags" }}:/opt/airflow/dags
      {{ .GetRelativePath "../../zarubaServiceName/logs" }}:/opt/airflow/logs
      {{ .GetRelativePath "../../zarubaServiceName/plugins" }}:/opt/airflow/plugins
    runInLocal: '{{ .GetValue "zarubaServiceNameRunInLocal" }}'

  zarubaServiceNameConfigurator:
    containerName: zarubaContainerNameConfigurator
    entryPoint: bash
    command: /opt/airflow/configurator.sh 
    volumes: |
      {{ .GetRelativePath "../../zarubaServiceName/configurator.sh" }}:/opt/airflow/configurator.sh
      {{ .GetRelativePath "../../zarubaServiceName/dags" }}:/opt/airflow/dags
      {{ .GetRelativePath "../../zarubaServiceName/logs" }}:/opt/airflow/logs
      {{ .GetRelativePath "../../zarubaServiceName/plugins" }}:/opt/airflow/plugins
    user: root

  zarubaServiceNameWebServer:
    containerName: zarubaContainerNameWebServer
    command: webserver
    ports: |
      8080:8080
    user: airflow

  zarubaServiceNameScheduler:
    containerName: zarubaContainerNameScheduler
    command: scheduler
    user: airflow

  zarubaServiceNameWorker:
    containerName: zarubaContainerNameWorker
    command: celery worker
    user: airflow

  zarubaServiceNameFlower:
    containerName: zarubaContainerNameFlower
    command: celery flower
    ports: |
      5555:5555
    user: airflow